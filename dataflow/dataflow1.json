{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "Blobsource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as string,",
				"          name as string,",
				"          dateofbirth as string,",
				"          email as string,",
				"          dailyexpenses as string,",
				"          city as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Blobsource",
				"Blobsource filter(toString(toDate(dateofbirth, 'yyyy-MM-dd')) != 'null' && regexMatch(email, '^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')) ~> filter1",
				"filter1 derive(dateofbirth = toDate(dateofbirth, 'yyyy-MM-dd')) ~> derivedColumn1",
				"derivedColumn1 derive(name = coalesce(name,'Unknown'),",
				"          dailyexpenses = coalesce(dailyexpenses,'0'),",
				"          city = coalesce(city,'Unknown')) ~> derivedColumn2",
				"derivedColumn2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Id as integer,",
				"          Name as string,",
				"          DateOfBirth as date,",
				"          Email as string,",
				"          DailyExpenses as double,",
				"          City as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          Id = id,",
				"          Name = name,",
				"          DateOfBirth = dateofbirth,",
				"          Email = email,",
				"          DailyExpenses = dailyexpenses,",
				"          City = city",
				"     )) ~> sink1"
			]
		}
	}
}